/**
 * skylark-domx-toggles - The skylark toggle plugin library for dom api extension
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-domx/skylark-domx-toggles/
 * @license MIT
 */
!function(e,t){var i=t.define,require=t.require,r="function"==typeof i&&i.amd,o=!r&&"undefined"!=typeof exports;if(!r&&!i){var a={};i=t.define=function(e,t,i){"function"==typeof i?(a[e]={factory:i,deps:t.map(function(t){return function(e,t){if("."!==e[0])return e;var i=t.split("/"),r=e.split("/");i.pop();for(var o=0;o<r.length;o++)"."!=r[o]&&(".."==r[o]?i.pop():i.push(r[o]));return i.join("/")}(t,e)}),resolved:!1,exports:null},require(e)):a[e]={factory:null,resolved:!0,exports:i}},require=t.require=function(e){if(!a.hasOwnProperty(e))throw new Error("Module "+e+" has not been defined");var module=a[e];if(!module.resolved){var i=[];module.deps.forEach(function(e){i.push(require(e))}),module.exports=module.factory.apply(t,i)||null,module.resolved=!0}return module.exports}}if(!i)throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");if(function(e,require){e("skylark-domx-toggles/toggles",["skylark-langx/skylark"],function(e){return e.attach("domx.toggles",{})}),e("toggles",["skylark-langx/skylark"],function(e){return e.attach("domx.toggles",{})}),e("CheckBox",["skylark-langx/langx","skylark-domx/browser","skylark-domx/eventer","skylark-domx/noder","skylark-domx/geom","skylark-domx/query","skylark-domx-plugins","./toggles"],function(e,t,i,r,o,a,s,n){var l=s.Plugin.inherit({klassName:"Checkbox",pluginName:"domx.checkbox",options:{ignoreVisibilityCheck:!1},_construct:function(t,i){this.overrided(t,i);var r=this.$();if("label"!==t.tagName.toLowerCase())throw new Error("Checkbox must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`");if(this.$label=r,this.$chk=this.$label.find('input[type="checkbox"]'),this.$container=r.parent(".checkbox"),!this.options.ignoreVisibilityCheck&&this.$chk.css("visibility").match(/hidden|collapse/))throw new Error("For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.");var o=this.$chk.attr("data-toggle");this.$toggleContainer=a(o),this.$chk.on("change",e.proxy(this.itemchecked,this)),this.setInitialState()},setInitialState:function(){var e=this.$chk,t=e.prop("checked"),i=e.prop("disabled");this.setCheckedState(e,t),this.setDisabledState(e,i)},setCheckedState:function(e,t){var i=e,r=this.$label,o=this.$toggleContainer;t?(i.prop("checked",!0),r.addClass("checked"),o.removeClass("hide hidden"),r.trigger("checked.fu.checkbox")):(i.prop("checked",!1),r.removeClass("checked"),o.addClass("hidden"),r.trigger("unchecked.fu.checkbox")),r.trigger("changed.fu.checkbox",t)},setDisabledState:function(e,t){var i=a(e),r=this.$label;return t?(i.prop("disabled",!0),r.addClass("disabled"),r.trigger("disabled.fu.checkbox")):(i.prop("disabled",!1),r.removeClass("disabled"),r.trigger("enabled.fu.checkbox")),i},itemchecked:function(e){var t=a(e.target),i=t.prop("checked");this.setCheckedState(t,i)},toggle:function(){var e=this.isChecked();e?this.uncheck():this.check()},check:function(){this.setCheckedState(this.$chk,!0)},uncheck:function(){this.setCheckedState(this.$chk,!1)},isChecked:function(){var e=this.$chk.prop("checked");return e},enable:function(){this.setDisabledState(this.$chk,!1)},disable:function(){this.setDisabledState(this.$chk,!0)},destroy:function(){return this.$label.remove(),this.$label[0].outerHTML}});return l.prototype.getValue=l.prototype.isChecked,s.register(l),n.Checkbox=l}),e("Radio",["skylark-langx/langx","skylark-domx/browser","skylark-domx/eventer","skylark-domx/noder","skylark-domx/geom","skylark-domx/query","skylark-domx-plugins","./toggles"],function(e,t,i,r,o,a,s,n){var l=s.Plugin.inherit({klassName:"Radio",pluginName:"domx.radio",options:{ignoreVisibilityCheck:!1},_construct:function(t,i){if(this.overrided(t,i),"label"!==t.tagName.toLowerCase())throw new Error("Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/radio.html for example of proper markup. Call `.radio()` on the `<label>` not the `<input>`");if(this.$label=this.$(),this.$radio=this.$label.find('input[type="radio"]'),this.groupName=this.$radio.attr("name"),!this.options.ignoreVisibilityCheck&&this.$radio.css("visibility").match(/hidden|collapse/))throw new Error("For accessibility reasons, in order for tab and space to function on radio, `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.");var r=this.$radio.attr("data-toggle");this.$toggleContainer=a(r),this.$radio.on("change",e.proxy(this.itemchecked,this)),this.setInitialState()},setInitialState:function(){var e=this.$radio,t=e.prop("checked"),i=e.prop("disabled");this.setCheckedState(e,t),this.setDisabledState(e,i)},resetGroup:function(){var e=a('input[name="'+this.groupName+'"]');e.each(function(e,t){var i=a(t),r=i.parent(),o=i.attr("data-toggle"),s=a(o);r.removeClass("checked"),s.addClass("hidden")})},setCheckedState:function(e,t){var i=e,r=i.parent(),o=i.attr("data-toggle"),s=a(o);t?(this.resetGroup(),i.prop("checked",!0),r.addClass("checked"),s.removeClass("hide hidden"),r.trigger("checked.fu.radio")):(i.prop("checked",!1),r.removeClass("checked"),s.addClass("hidden"),r.trigger("unchecked.fu.radio")),r.trigger("changed.fu.radio",t)},setDisabledState:function(e,t){var i=a(e),r=this.$label;return t?(i.prop("disabled",!0),r.addClass("disabled"),r.trigger("disabled.fu.radio")):(i.prop("disabled",!1),r.removeClass("disabled"),r.trigger("enabled.fu.radio")),i},itemchecked:function(e){var t=a(e.target);this.setCheckedState(t,!0)},check:function(){this.setCheckedState(this.$radio,!0)},uncheck:function(){this.setCheckedState(this.$radio,!1)},isChecked:function(){var e=this.$radio.prop("checked");return e},enable:function(){this.setDisabledState(this.$radio,!1)},disable:function(){this.setDisabledState(this.$radio,!0)},destroy:function(){return this.$label.remove(),this.$label[0].outerHTML}});return l.prototype.getValue=l.prototype.isChecked,s.register(l),n.Radio=l}),e("skylark-domx-toggles/main",["./toggles","CheckBox","Radio"],function(e){return e}),e("skylark-domx-toggles",["skylark-domx-toggles/main"],function(e){return e})}(i),!r){var s=require("skylark-langx-ns");o?module.exports=s:t.skylarkjs=s}}(0,this);
//# sourceMappingURL=sourcemaps/skylark-domx-toggles.js.map
