/**
 * skylark-domx-toggles - The skylark toggle plugin library for dom api extension
 * @author Hudaokeji, Inc.
 * @version v0.9.0
 * @link https://github.com/skylark-domx/skylark-domx-toggles/
 * @license MIT
 */
!function(e,t){var a=t.define,require=t.require,i="function"==typeof a&&a.amd,r=!i&&"undefined"!=typeof exports;if(!i&&!a){var s={};a=t.define=function(e,t,a){"function"==typeof a?(s[e]={factory:a,deps:t.map(function(t){return function(e,t){if("."!==e[0])return e;var a=t.split("/"),i=e.split("/");a.pop();for(var r=0;r<i.length;r++)"."!=i[r]&&(".."==i[r]?a.pop():a.push(i[r]));return a.join("/")}(t,e)}),resolved:!1,exports:null},require(e)):s[e]={factory:null,resolved:!0,exports:a}},require=t.require=function(e){if(!s.hasOwnProperty(e))throw new Error("Module "+e+" has not been defined");var module=s[e];if(!module.resolved){var a=[];module.deps.forEach(function(e){a.push(require(e))}),module.exports=module.factory.apply(t,a)||null,module.resolved=!0}return module.exports}}if(!a)throw new Error("The module utility (ex: requirejs or skylark-utils) is not loaded!");if(function(e,require){e("skylark-domx-toggles/toggles",["skylark-langx/skylark"],function(e){return e.attach("domx.toggles",{})}),e("skylark-domx-toggles/CheckBox",["skylark-langx/langx","skylark-domx/browser","skylark-domx/eventer","skylark-domx/noder","skylark-domx/geom","skylark-domx/query","skylark-domx-plugins","./toggles"],function(e,t,a,i,r,s,o,n){var l=o.Plugin.inherit({klassName:"Checkbox",pluginName:"domx.checkbox",options:{ignoreVisibilityCheck:!1},_construct:function(t,a){this.overrided(t,a);var i=this.$();if("label"!==t.tagName.toLowerCase())throw new Error("Checkbox must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`");if(this.$label=i,this.$chk=this.$label.find('input[type="checkbox"]'),this.$container=i.parent(".checkbox"),!this.options.ignoreVisibilityCheck&&this.$chk.css("visibility").match(/hidden|collapse/))throw new Error("For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.");var r=this.$chk.attr("data-toggle");this.$toggleContainer=s(r),this.$chk.on("change",e.proxy(this.itemchecked,this)),this.setInitialState()},setInitialState:function(){var e=this.$chk,t=e.prop("checked"),a=e.prop("disabled");this.setCheckedState(e,t),this.setDisabledState(e,a)},setCheckedState:function(e,t){var a=e,i=this.$label,r=this.$toggleContainer;t?(a.prop("checked",!0),i.addClass("checked"),r.removeClass("hide hidden"),i.trigger("checked.fu.checkbox")):(a.prop("checked",!1),i.removeClass("checked"),r.addClass("hidden"),i.trigger("unchecked.fu.checkbox")),i.trigger("changed.fu.checkbox",t)},setDisabledState:function(e,t){var a=s(e),i=this.$label;return t?(a.prop("disabled",!0),i.addClass("disabled"),i.trigger("disabled.fu.checkbox")):(a.prop("disabled",!1),i.removeClass("disabled"),i.trigger("enabled.fu.checkbox")),a},itemchecked:function(e){var t=s(e.target),a=t.prop("checked");this.setCheckedState(t,a)},toggle:function(){var e=this.isChecked();e?this.uncheck():this.check()},check:function(){this.setCheckedState(this.$chk,!0)},uncheck:function(){this.setCheckedState(this.$chk,!1)},isChecked:function(){var e=this.$chk.prop("checked");return e},enable:function(){this.setDisabledState(this.$chk,!1)},disable:function(){this.setDisabledState(this.$chk,!0)},destroy:function(){return this.$label.remove(),this.$label[0].outerHTML}});return l.prototype.getValue=l.prototype.isChecked,o.register(l),n.Checkbox=l}),e("skylark-domx-toggles/Radio",["skylark-langx/langx","skylark-domx/browser","skylark-domx/eventer","skylark-domx/noder","skylark-domx/geom","skylark-domx/query","skylark-domx-plugins","./toggles"],function(e,t,a,i,r,s,o,n){var l=o.Plugin.inherit({klassName:"Radio",pluginName:"domx.toggles.radio",options:{ignoreVisibilityCheck:!1},_construct:function(t,a){if(this.overrided(t,a),"label"!==t.tagName.toLowerCase())throw new Error("Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/radio.html for example of proper markup. Call `.radio()` on the `<label>` not the `<input>`");if(this.$label=this.$(),this.$radio=this.$label.find('input[type="radio"]'),this.groupName=this.$radio.attr("name"),!this.options.ignoreVisibilityCheck&&this.$radio.css("visibility").match(/hidden|collapse/))throw new Error("For accessibility reasons, in order for tab and space to function on radio, `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.");var i=this.$radio.attr("data-toggle");this.$toggleContainer=s(i),this.$radio.on("change",e.proxy(this.itemchecked,this)),this.setInitialState()},setInitialState:function(){var e=this.$radio,t=e.prop("checked"),a=e.prop("disabled");this.setCheckedState(e,t),this.setDisabledState(e,a)},resetGroup:function(){var e=s('input[name="'+this.groupName+'"]');e.each(function(e,t){var a=s(t),i=a.parent(),r=a.attr("data-toggle"),o=s(r);i.removeClass("checked"),o.addClass("hidden")})},setCheckedState:function(e,t){var a=e,i=a.parent(),r=a.attr("data-toggle"),o=s(r);t?(this.resetGroup(),a.prop("checked",!0),i.addClass("checked"),o.removeClass("hide hidden"),i.trigger("checked.fu.radio")):(a.prop("checked",!1),i.removeClass("checked"),o.addClass("hidden"),i.trigger("unchecked.fu.radio")),i.trigger("changed.fu.radio",t)},setDisabledState:function(e,t){var a=s(e),i=this.$label;return t?(a.prop("disabled",!0),i.addClass("disabled"),i.trigger("disabled.fu.radio")):(a.prop("disabled",!1),i.removeClass("disabled"),i.trigger("enabled.fu.radio")),a},itemchecked:function(e){var t=s(e.target);this.setCheckedState(t,!0)},check:function(){this.setCheckedState(this.$radio,!0)},uncheck:function(){this.setCheckedState(this.$radio,!1)},isChecked:function(){var e=this.$radio.prop("checked");return e},enable:function(){this.setDisabledState(this.$radio,!1)},disable:function(){this.setDisabledState(this.$radio,!0)},destroy:function(){return this.$label.remove(),this.$label[0].outerHTML}});return l.prototype.getValue=l.prototype.isChecked,o.register(l),n.Radio=l}),e("skylark-domx-toggles/Tab",["skylark-langx/langx","skylark-domx-browser","skylark-domx-eventer","skylark-domx-noder","skylark-domx-geom","skylark-domx-query","skylark-domx-plugins","./toggles"],function(e,t,a,i,r,s,o,n){"use strict";var l=o.Plugin.inherit({klassName:"Tab",pluginName:"domx.toggles.tab",_construct:function(t,a){this.element=s(t),this.target=a&&a.target,this.element.on("click.bs.tab.data-api",e.proxy(function(e){e.preventDefault(),this.show()},this))},show:function(){var e=this.element,t=e.closest("ul:not(.dropdown-menu)"),i=this.target||e.data("target");if(i||(i=(i=e.attr("href"))&&i.replace(/.*(?=#[^\s]*$)/,"")),!e.parent("li").hasClass("active")){var r=t.find(".active:last a"),o=a.create("hide.bs.tab",{relatedTarget:e[0]}),n=a.create("show.bs.tab",{relatedTarget:r[0]});if(r.trigger(o),e.trigger(n),!n.isDefaultPrevented()&&!o.isDefaultPrevented()){var l=s(i);this.activate(e.closest("li"),t),this.activate(l,l.parent(),function(){r.trigger({type:"hidden.bs.tab",relatedTarget:e[0]}),e.trigger({type:"shown.bs.tab",relatedTarget:r[0]})})}}},activate:function(e,a,i){var r=a.find("> .active"),s=i&&t.support.transition&&(r.length&&r.hasClass("fade")||!!a.find("> .fade").length);function o(){r.removeClass("active").find("> .dropdown-menu > .active").removeClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!1),e.addClass("active").find('[data-toggle="tab"]').attr("aria-expanded",!0),s?(e[0].offsetWidth,e.addClass("in")):e.removeClass("fade"),e.parent(".dropdown-menu").length&&e.closest("li.dropdown").addClass("active").end().find('[data-toggle="tab"]').attr("aria-expanded",!0),i&&i()}r.length&&s?r.one("transitionEnd",o).emulateTransitionEnd(l.TRANSITION_DURATION):o(),r.removeClass("in")}});return l.TRANSITION_DURATION=150,o.register(l),n.Tab=l}),e("skylark-domx-toggles/main",["./toggles","./CheckBox","./Radio","./Tab"],function(e){return e}),e("skylark-domx-toggles",["skylark-domx-toggles/main"],function(e){return e})}(a),!i){var o=require("skylark-langx-ns");r?module.exports=o:t.skylarkjs=o}}(0,this);
//# sourceMappingURL=sourcemaps/skylark-domx-toggles.js.map
