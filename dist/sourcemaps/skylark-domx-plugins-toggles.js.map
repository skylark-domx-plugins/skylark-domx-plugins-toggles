{"version":3,"sources":["skylark-domx-plugins-toggles.js"],"names":["define","plugins","toggles","langx","browser","eventer","noder","geom","$","Checkbox","Plugin","inherit","klassName","pluginName","options","ignoreVisibilityCheck","_construct","elm","this","overrided","$element","tagName","toLowerCase","Error","$label","$chk","find","$container","parent","css","match","containerSelector","attr","$toggleContainer","on","proxy","itemchecked","setInitialState","checked","prop","disabled","setCheckedState","setDisabledState","element","$lbl","$containerToggle","addClass","removeClass","trigger","evt","target","toggle","isChecked","uncheck","check","enable","disable","destroy","remove","outerHTML","prototype","getValue","register","Collapse","transitioning","dimension","hasWidth","hasClass","show","startEvent","create","isDefaultPrevented","complete","support","transition","call","scrollSize","camelCase","join","one","emulateTransitionEnd","TRANSITION_DURATION","hide","offsetHeight","styler","Fullscreen","classes","full","unfull","selectors","fullscreenButton","fullscreenIcons","$el","$fullscreenButton","$fullscreenIcons","listenTo","toggleFullScreen","updateFullscreenButton","document","fullscreenElement","exitFullscreen","webkitFullscreenElement","webkitExitFullscreen","webkitRequestFullscreen","requestFullscreen","_fullscreenIcons","forEach","icon","classList","data","Pip","mini","unmini","pipButton","$pipButton","togglePip","targetEl","pictureInPictureElement","requestPictureInPicture","exitPictureInPicture","error","console","Radio","$radio","groupName","resetGroup","$radios","each","index","item","Tab","e","preventDefault","$this","$ul","closest","selector","replace","$previous","hideEvent","relatedTarget","showEvent","$target","activate","type","container","callback","$active","length","next","end","offsetWidth","main"],"mappings":"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","file":"../skylark-domx-plugins-toggles.js","sourcesContent":["define('skylark-domx-plugins-toggles/toggles',[\r\n    \"skylark-domx-plugins-base/plugins\"\r\n], function(plugins) {\r\n    'use strict';\r\n\r\n\treturn plugins.toggles = {};\r\n});\ndefine('skylark-domx-plugins-toggles/checkbox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx/browser\",\r\n  \"skylark-domx/eventer\",\r\n  \"skylark-domx/noder\",\r\n  \"skylark-domx/geom\",\r\n  \"skylark-domx/query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./toggles\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,toggles){\r\n\r\n  var Checkbox = plugins.Plugin.inherit({\r\n    klassName: \"Checkbox\",\r\n\r\n    pluginName : \"lark.toggles.checkbox\",\r\n\r\n    options : {\r\n      ignoreVisibilityCheck: false\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      var $element = this.$();\r\n\r\n      if (elm.tagName.toLowerCase() !== 'label') {\r\n        throw new Error('Checkbox must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$chk = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$chk.css('visibility').match(/hidden|collapse/)) {\r\n        throw new Error('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$chk.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n      // handle internal events\r\n      this.$chk.on('change', langx.proxy(this.itemchecked, this));\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    setInitialState: function setInitialState () {\r\n      var $chk = this.$chk;\r\n\r\n      // get current state of input\r\n      var checked = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n\r\n      // sync label class with input state\r\n      this.setCheckedState($chk, checked);\r\n      this.setDisabledState($chk, disabled);\r\n    },\r\n\r\n    setCheckedState: function setCheckedState (element, checked) {\r\n      var $chk = element;\r\n      var $lbl = this.$label;\r\n      var $containerToggle = this.$toggleContainer;\r\n\r\n      if (checked) {\r\n        $chk.prop('checked', true);\r\n        $lbl.addClass('checked');\r\n        $containerToggle.removeClass('hide hidden');\r\n        $lbl.trigger('checked');\r\n      } else {\r\n        $chk.prop('checked', false);\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n        $lbl.trigger('unchecked');\r\n      }\r\n\r\n      $lbl.trigger('changed', checked);\r\n    },\r\n\r\n    setDisabledState: function (element, disabled) {\r\n      var $chk = $(element);\r\n      var $lbl = this.$label;\r\n\r\n      if (disabled) {\r\n        $chk.prop('disabled', true);\r\n        $lbl.addClass('disabled');\r\n        $lbl.trigger('disabled');\r\n      } else {\r\n        $chk.prop('disabled', false);\r\n        $lbl.removeClass('disabled');\r\n        $lbl.trigger('enabled');\r\n      }\r\n\r\n      return $chk;\r\n    },\r\n\r\n    itemchecked: function (evt) {\r\n      var $chk = $(evt.target);\r\n      var checked = $chk.prop('checked');\r\n\r\n      this.setCheckedState($chk, checked);\r\n    },\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function () {\r\n      this.setCheckedState(this.$chk, true);\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.setCheckedState(this.$chk, false);\r\n    },\r\n\r\n    isChecked: function () {\r\n      var checked = this.$chk.prop('checked');\r\n      return checked;\r\n    },\r\n\r\n    enable: function () {\r\n      this.setDisabledState(this.$chk, false);\r\n    },\r\n\r\n    disable: function () {\r\n      this.setDisabledState(this.$chk, true);\r\n    },\r\n\r\n    destroy: function () {\r\n      this.$label.remove();\r\n      return this.$label[0].outerHTML;\r\n    }\r\n  });\r\n\r\n\r\n  Checkbox.prototype.getValue = Checkbox.prototype.isChecked;\r\n\r\n  plugins.register(Checkbox);\r\n\r\n  return toggles.Checkbox = Checkbox;\r\n});\r\n\ndefine('skylark-domx-plugins-toggles/collapse',[\n    \"skylark-langx/langx\",\n    \"skylark-domx-browser\",\n    \"skylark-domx-eventer\",\n    \"skylark-domx-query\",\n    \"skylark-domx-plugins-base\",\n    \"./toggles\"\n], function(langx, browser, eventer,  $, plugins, toggles) {\n\n\n  'use strict';\n\n  // COLLAPSE PUBLIC CLASS DEFINITION\n  // ================================\n\n  var Collapse =  plugins.Plugin.inherit({\n    klassName: \"Collapse\",\n\n    pluginName : \"lark.toggles.collapse\",\n\n    options : {\n      toggle: true\n    },\n\n    _construct : function(elm,options) {\n      ////options = langx.mixin({}, Collapse.DEFAULTS, $(element).data(), options)\n      this.overrided(elm,options);\n      this.$element      = this.$();\n      //this.$trigger      = $('[data-toggle=\"collapse\"][href=\"#' + elm.id + '\"],' +\n      //                     '[data-toggle=\"collapse\"][data-target=\"#' + elm.id + '\"]')\n      this.transitioning = null\n\n      //if (this.options.parent) {\n      //  this.$parent = this.getParent()\n      //} else {\n      //  this.addAriaAndCollapsedClass(this.$element, this.$trigger)\n      //}\n\n      if (this.options.toggle) {\n        this.toggle();\n      }\n    },\n\n    dimension : function () {\n      var hasWidth = this.$element.hasClass('width');\n      return hasWidth ? 'width' : 'height';\n    },\n\n    show : function () {\n      if (this.transitioning || this.$element.hasClass('in')) {\n        return;\n      }\n\n      //var activesData;\n      //var actives = this.$parent && this.$parent.children('.collapsable').children('.in, .collapsing')\n\n      //if (actives && actives.length) {\n      //  activesData = actives.data('collapse')\n      //  if (activesData && activesData.transitioning) return\n      //}\n\n      var startEvent = eventer.create('show.collapse');\n      this.$element.trigger(startEvent)\n      if (startEvent.isDefaultPrevented()) return\n\n      //if (actives && actives.length) {\n      //  //Plugin.call(actives, 'hide')\n      //  actives.plugin(\"domx.collapse\").hide();\n      //  activesData || actives.data('collapse', null)\n      //}\n\n      var dimension = this.dimension();\n\n      this.$element\n        .removeClass('collapse')\n        .addClass('collapsing')[dimension](0)\n        .attr('aria-expanded', true)\n\n      //this.$trigger\n      //  .removeClass('collapsed')\n      //  .attr('aria-expanded', true)\n\n      this.transitioning = 1\n\n      var complete = function () {\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse in')[dimension]('')\n        this.transitioning = 0\n        this.$element\n          .trigger('shown.collapse')\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      var scrollSize = langx.camelCase(['scroll', dimension].join('-'));\n\n      this.$element\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)[dimension](this.$element[0][scrollSize]);\n    },\n\n    hide : function () {\n      if (this.transitioning || !this.$element.hasClass('in')) {\n        return ;\n      }\n\n      var startEvent = eventer.create('hide.collapse');\n      this.$element.trigger(startEvent);\n      if (startEvent.isDefaultPrevented()) {\n        return ;\n      } \n\n      var dimension = this.dimension();\n\n      this.$element[dimension](this.$element[dimension]())[0].offsetHeight;\n\n      this.$element\n        .addClass('collapsing')\n        .removeClass('collapse in')\n        .attr('aria-expanded', false);\n\n      //this.$trigger\n      //  .addClass('collapsed')\n      //  .attr('aria-expanded', false);\n\n      this.transitioning = 1;\n\n      var complete = function () {\n        this.transitioning = 0;\n        this.$element\n          .removeClass('collapsing')\n          .addClass('collapse')\n          .trigger('hidden.collapse');\n      }\n\n      if (!browser.support.transition) {\n        return complete.call(this);\n      }\n\n      this.$element\n        [dimension](0)\n        .one('transitionEnd', langx.proxy(complete, this))\n        .emulateTransitionEnd(Collapse.TRANSITION_DURATION)\n    },\n\n    toggle : function () {\n      this[this.$element.hasClass('in') ? 'hide' : 'show']();\n    }\n\n    /*\n    getParent : function () {\n      return $(this.options.parent)\n        .find('[data-toggle=\"collapse\"][data-parent=\"' + this.options.parent + '\"]')\n        .each(langx.proxy(function (i, element) {\n          var $element = $(element)\n          this.addAriaAndCollapsedClass(getTargetFromTrigger($element), $element)\n        }, this))\n        .end()\n    },\n\n    addAriaAndCollapsedClass : function ($element, $trigger) {\n      var isOpen = $element.hasClass('in');\n\n      $element.attr('aria-expanded', isOpen);\n      $trigger\n        .toggleClass('collapsed', !isOpen)\n        .attr('aria-expanded', isOpen);\n    }\n    */\n  });\n\n  Collapse.TRANSITION_DURATION = 350;\n\n  /*\n  function getTargetFromTrigger($trigger) {\n    var href\n    var target = $trigger.attr('data-target')\n      || (href = $trigger.attr('href')) && href.replace(/.*(?=#[^\\s]+$)/, '') // strip for ie7\n\n    return $(target)\n  }\n  */\n\n  plugins.register(Collapse);\n\n  return toggles.Collapse = Collapse;\n\n});\n\ndefine('skylark-domx-plugins-toggles/fullscreen',[\r\n  \"skylark-langx\",\r\n  \"skylark-domx-styler\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./toggles\"\r\n],function(langx,styler,noder, eventer,$ , plugins,toggles) {\r\n\r\n  'use strict'\r\n\r\n  var Fullscreen = plugins.Plugin.inherit({\r\n    klassName : \"Fullscreen\",\r\n\r\n    pluginName : \"intg.custom_html5_video\",\r\n   \r\n    options : {\r\n      classes : {\r\n        full : \"full\",\r\n        unfull : \"unfull\"\r\n      },\r\n      selectors : {\r\n        fullscreenButton : '.fullscreen-button',\r\n        fullscreenIcons : '.fullscreen-button use'\r\n      }\r\n    },\r\n\r\n\r\n    _construct: function(elm, options) {\r\n      //this.options = options\r\n      plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n      let $el = this.$(),\r\n          selectors = this.options.selectors,\r\n          target = this.target = this.options.target;\r\n\r\n      if (selectors.fullscreenButton) {\r\n        this.$fullscreenButton = $el.find(selectors.fullscreenButton);\r\n      } else {\r\n        this.$fullscreenButton = $el;\r\n      }\r\n\r\n      this.$fullscreenIcons = $el.find(selectors.fullscreenIcons);\r\n\r\n      // Add eventlisteners here\r\n      this.listenTo(this.$fullscreenButton,'click',this.toggleFullScreen);\r\n      this.listenTo($(target),'fullscreenchange,webkitfullscreenchange',this.updateFullscreenButton);\r\n\r\n    },\r\n\r\n\r\n    // toggleFullScreen toggles the full screen state of the video\r\n    // If the browser is currently in fullscreen mode,\r\n    // then it should exit and vice versa.\r\n    toggleFullScreen : function () {\r\n      if (document.fullscreenElement) {\r\n        document.exitFullscreen();\r\n      } else if (document.webkitFullscreenElement) {\r\n        // Need this to support Safari\r\n        document.webkitExitFullscreen();\r\n      } else if (this.target.webkitRequestFullscreen) {\r\n        // Need this to support Safari\r\n        this.target.webkitRequestFullscreen();\r\n      } else {\r\n        this.target.requestFullscreen();\r\n      }\r\n    },\r\n\r\n    // updateFullscreenButton changes the icon of the full screen button\r\n    // and tooltip to reflect the current full screen state of the video\r\n    updateFullscreenButton : function () {\r\n      this._fullscreenIcons.forEach((icon) => icon.classList.toggle('hidden'));\r\n\r\n      if (document.fullscreenElement) {\r\n        this.$fullscreenButton.data('title', 'Exit full screen (f)');\r\n        this.$fullscreenButton.removeClass(this.options.classes.full).addClass(this.options.classes.unfull);\r\n      } else {\r\n        this.$fullscreenButton.data('title', 'Full screen (f)');\r\n        this.$fullscreenButton.removeClass(this.options.classes.unfull).addClass(this.options.classes.full);\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Fullscreen);\r\n\r\n  return toggles.Fullscreen = Fullscreen;\r\n});\r\n\r\n\ndefine('skylark-domx-plugins-toggles/pip',[\r\n  \"skylark-langx\",\r\n  \"skylark-domx-styler\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./toggles\"\r\n],function(langx,styler,noder, eventer,$ , plugins,toggles) {\r\n\r\n  'use strict'\r\n\r\n  var Pip = plugins.Plugin.inherit({\r\n    klassName : \"Pip\",\r\n\r\n    pluginName : \"intg.custom_html5_video\",\r\n   \r\n    options : {\r\n      classes : {\r\n        mini : \"mini\",\r\n        unmini : \"unmini\"\r\n      },\r\n      selectors : {\r\n        pipButton : '.pip-button'\r\n      }\r\n    },\r\n\r\n\r\n    _construct: function(elm, options) {\r\n      //this.options = options\r\n      plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n      let $el = this.$(),\r\n          selectors = this.options.selectors,\r\n          target = this.target = this.options.target;\r\n\r\n      if (selectors.pipButton) {\r\n        this.$pipButton = $el.find(selectors.pipButton);\r\n      } else {\r\n        this.$pipButton = $el;\r\n      }\r\n\r\n\r\n      this.listenTo(this.$pipButton,'click',this.togglePip);\r\n\r\n      if (!('pictureInPictureEnabled' in document)) {\r\n          this.$pipButton.hide();\r\n      }\r\n\r\n    },\r\n\r\n\r\n    // togglePip toggles Picture-in-Picture mode on the video\r\n    togglePip : function () {\r\n      try {\r\n        let targetEl = $(this.target)[0];\r\n        if (targetEl !== document.pictureInPictureElement) {\r\n          this.$pipButton.disabled(true);\r\n          targetEl.requestPictureInPicture();\r\n        } else {\r\n          document.exitPictureInPicture();\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      } finally {\r\n        this.$pipButton.disabled(false);\r\n      }\r\n    },\r\n\r\n  });\r\n\r\n  plugins.register(Pip);\r\n\r\n  return toggles.Pip = Pip;\r\n});\r\n\r\n\ndefine('skylark-domx-plugins-toggles/radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx/browser\",\r\n  \"skylark-domx/eventer\",\r\n  \"skylark-domx/noder\",\r\n  \"skylark-domx/geom\",\r\n  \"skylark-domx/query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./toggles\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,toggles){\r\n\r\n\r\n  var Radio = plugins.Plugin.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"lark.toggles.radio\",\r\n\r\n    options : {\r\n      ignoreVisibilityCheck: false\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      if (elm.tagName.toLowerCase() !== 'label') {\r\n        throw new Error('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/radio.html for example of proper markup. Call `.radio()` on the `<label>` not the `<input>`');\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = this.$();\r\n      this.$radio = this.$label.find('input[type=\"radio\"]');\r\n      this.groupName = this.$radio.attr('name'); // don't cache group itself since items can be added programmatically\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        throw new Error('For accessibility reasons, in order for tab and space to function on radio, `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n      // handle internal events\r\n      this.$radio.on('change', langx.proxy(this.itemchecked, this));\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    setInitialState: function () {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      // sync label class with input state\r\n      this.setCheckedState($radio, checked);\r\n      this.setDisabledState($radio, disabled);\r\n    },\r\n\r\n    resetGroup: function () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    },\r\n\r\n    setCheckedState: function (element, checked) {\r\n      var $radio = element;\r\n      var $lbl = $radio.parent();\r\n      var containerSelector = $radio.attr('data-toggle');\r\n      var $containerToggle = $(containerSelector);\r\n\r\n      if (checked) {\r\n        // reset all items in group\r\n        this.resetGroup();\r\n\r\n        $radio.prop('checked', true);\r\n        $lbl.addClass('checked');\r\n        $containerToggle.removeClass('hide hidden');\r\n        $lbl.trigger('checked');\r\n      } else {\r\n        $radio.prop('checked', false);\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n        $lbl.trigger('unchecked');\r\n      }\r\n\r\n      $lbl.trigger('changed', checked);\r\n    },\r\n\r\n    setDisabledState: function (element, disabled) {\r\n      var $radio = $(element);\r\n      var $lbl = this.$label;\r\n\r\n      if (disabled) {\r\n        $radio.prop('disabled', true);\r\n        $lbl.addClass('disabled');\r\n        $lbl.trigger('disabled');\r\n      } else {\r\n        $radio.prop('disabled', false);\r\n        $lbl.removeClass('disabled');\r\n        $lbl.trigger('enabled');\r\n      }\r\n\r\n      return $radio;\r\n    },\r\n\r\n    itemchecked: function (evt) {\r\n      var $radio = $(evt.target);\r\n      this.setCheckedState($radio, true);\r\n    },\r\n\r\n    check: function () {\r\n      this.setCheckedState(this.$radio, true);\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.setCheckedState(this.$radio, false);\r\n    },\r\n\r\n    isChecked: function () {\r\n      var checked = this.$radio.prop('checked');\r\n      return checked;\r\n    },\r\n\r\n    enable: function () {\r\n      this.setDisabledState(this.$radio, false);\r\n    },\r\n\r\n    disable: function () {\r\n      this.setDisabledState(this.$radio, true);\r\n    },\r\n\r\n    destroy: function () {\r\n      this.$label.remove();\r\n      return this.$label[0].outerHTML;\r\n    }\r\n\r\n  });\r\n\r\n\r\n  Radio.prototype.getValue = Radio.prototype.isChecked;\r\n\r\n  plugins.register(Radio);\r\n\r\n  return toggles.Radio = Radio;\r\n});\r\n\ndefine('skylark-domx-plugins-toggles/tab',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins-base\",\n  \"./toggles\"\n],function(langx,browser,eventer,noder,geom,$,plugins,toggles){\n\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n\n  var Tab =  plugins.Plugin.inherit({\n    klassName: \"Tab\",\n\n    pluginName : \"lark.toggles.tab\",\n\n    _construct : function(element,options) {\n      // jscs:disable requireDollarBeforejQueryAssignment\n      this.element = $(element)\n      this.target = options && options.target;\n\n      // jscs:enable requireDollarBeforejQueryAssignment\n      this.element.on(\"click.lark.toggles.tab\",langx.proxy(function(e){\n        e.preventDefault()\n        this.show();\n      },this));    \n    },\n\n    show : function () {\n      var $this    = this.element\n      var $ul      = $this.closest('ul:not(.dropdown-menu)')\n      var selector = this.target || $this.data('target');\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      if ($this.parent('li').hasClass('active')) return\n\n      var $previous = $ul.find('.active:last a')\n      var hideEvent = eventer.create('hide', {\n        relatedTarget: $this[0]\n      })\n      var showEvent = eventer.create('show', {\n        relatedTarget: $previous[0]\n      })\n\n      $previous.trigger(hideEvent);\n      $this.trigger(showEvent);\n\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n      var $target = $(selector);\n\n      this.activate($this.closest('li'), $ul);\n      this.activate($target, $target.parent(), function () {\n        $previous.trigger({\n          type: 'hidden',\n          relatedTarget: $this[0]\n        })\n        $this.trigger({\n          type: 'shown',\n          relatedTarget: $previous[0]\n        })\n      })\n    },\n\n    activate : function (element, container, callback) {\n      var $active    = container.find('> .active')\n      var transition = callback\n        && browser.support.transition\n        && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n      function next() {\n        $active\n          .removeClass('active')\n          .find('> .dropdown-menu > .active')\n            .removeClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', false)\n\n        element\n          .addClass('active')\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if (element.parent('.dropdown-menu').length) {\n          element\n            .closest('li.dropdown')\n              .addClass('active')\n            .end()\n            .find('[data-toggle=\"tab\"]')\n              .attr('aria-expanded', true)\n        }\n\n        callback && callback()\n      }\n\n      $active.length && transition ?\n        $active\n          .one('transitionEnd', next)\n          .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n        next()\n\n      $active.removeClass('in')\n    }\n\n\n  });\n\n\n  Tab.TRANSITION_DURATION = 150\n\n\n  plugins.register(Tab);\n\n  return toggles.Tab = Tab;\n});\n\ndefine('skylark-domx-plugins-toggles/main',[\r\n\t\"./toggles\",\r\n\t\"./checkbox\",\r\n\t\"./collapse\",\r\n\t\"./fullscreen\",\r\n\t\"./pip\",\r\n\t\"./radio\",\r\n\t\"./tab\"\r\n],function(toggles){\r\n\treturn toggles;\r\n});\ndefine('skylark-domx-plugins-toggles', ['skylark-domx-plugins-toggles/main'], function (main) { return main; });\n\n"]}