{"version":3,"sources":["skylark-domx-toggles.js"],"names":["define","skylark","attach","langx","browser","eventer","noder","geom","$","plugins","toggles","Checkbox","Plugin","inherit","klassName","pluginName","options","ignoreVisibilityCheck","_construct","elm","this","overrided","$element","tagName","toLowerCase","Error","$label","$chk","find","$container","parent","css","match","containerSelector","attr","$toggleContainer","on","proxy","itemchecked","setInitialState","checked","prop","disabled","setCheckedState","setDisabledState","element","$lbl","$containerToggle","addClass","removeClass","trigger","evt","target","toggle","isChecked","uncheck","check","enable","disable","destroy","remove","outerHTML","prototype","getValue","register","Radio","$radio","groupName","resetGroup","$radios","each","index","item","Tab","e","preventDefault","show","$this","$ul","closest","selector","data","replace","hasClass","$previous","hideEvent","create","relatedTarget","showEvent","isDefaultPrevented","$target","activate","type","container","callback","$active","transition","support","length","next","end","offsetWidth","one","emulateTransitionEnd","TRANSITION_DURATION","main"],"mappings":"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","file":"../skylark-domx-toggles.js","sourcesContent":["define('skylark-domx-toggles/toggles',[\r\n\t\"skylark-langx/skylark\"\r\n],function(skylark){\r\n\treturn skylark.attach(\"domx.toggles\",{});\r\n});\ndefine('skylark-domx-toggles/CheckBox',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx/browser\",\r\n  \"skylark-domx/eventer\",\r\n  \"skylark-domx/noder\",\r\n  \"skylark-domx/geom\",\r\n  \"skylark-domx/query\",\r\n  \"skylark-domx-plugins\",  \r\n  \"./toggles\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,toggles){\r\n\r\n  var Checkbox = plugins.Plugin.inherit({\r\n    klassName: \"Checkbox\",\r\n\r\n    pluginName : \"domx.checkbox\",\r\n\r\n    options : {\r\n      ignoreVisibilityCheck: false\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      var $element = this.$();\r\n\r\n      if (elm.tagName.toLowerCase() !== 'label') {\r\n        throw new Error('Checkbox must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/checkbox.html for example of proper markup. Call `.checkbox()` on the `<label>` not the `<input>`');\r\n        return;\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = $element;\r\n      this.$chk = this.$label.find('input[type=\"checkbox\"]');\r\n      this.$container = $element.parent('.checkbox'); // the container div\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$chk.css('visibility').match(/hidden|collapse/)) {\r\n        throw new Error('For accessibility reasons, in order for tab and space to function on checkbox, checkbox `<input />`\\'s `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$chk.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n      // handle internal events\r\n      this.$chk.on('change', langx.proxy(this.itemchecked, this));\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    setInitialState: function setInitialState () {\r\n      var $chk = this.$chk;\r\n\r\n      // get current state of input\r\n      var checked = $chk.prop('checked');\r\n      var disabled = $chk.prop('disabled');\r\n\r\n      // sync label class with input state\r\n      this.setCheckedState($chk, checked);\r\n      this.setDisabledState($chk, disabled);\r\n    },\r\n\r\n    setCheckedState: function setCheckedState (element, checked) {\r\n      var $chk = element;\r\n      var $lbl = this.$label;\r\n      var $containerToggle = this.$toggleContainer;\r\n\r\n      if (checked) {\r\n        $chk.prop('checked', true);\r\n        $lbl.addClass('checked');\r\n        $containerToggle.removeClass('hide hidden');\r\n        $lbl.trigger('checked.fu.checkbox');\r\n      } else {\r\n        $chk.prop('checked', false);\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n        $lbl.trigger('unchecked.fu.checkbox');\r\n      }\r\n\r\n      $lbl.trigger('changed.fu.checkbox', checked);\r\n    },\r\n\r\n    setDisabledState: function (element, disabled) {\r\n      var $chk = $(element);\r\n      var $lbl = this.$label;\r\n\r\n      if (disabled) {\r\n        $chk.prop('disabled', true);\r\n        $lbl.addClass('disabled');\r\n        $lbl.trigger('disabled.fu.checkbox');\r\n      } else {\r\n        $chk.prop('disabled', false);\r\n        $lbl.removeClass('disabled');\r\n        $lbl.trigger('enabled.fu.checkbox');\r\n      }\r\n\r\n      return $chk;\r\n    },\r\n\r\n    itemchecked: function (evt) {\r\n      var $chk = $(evt.target);\r\n      var checked = $chk.prop('checked');\r\n\r\n      this.setCheckedState($chk, checked);\r\n    },\r\n\r\n    toggle: function () {\r\n      var checked = this.isChecked();\r\n\r\n      if (checked) {\r\n        this.uncheck();\r\n      } else {\r\n        this.check();\r\n      }\r\n    },\r\n\r\n    check: function () {\r\n      this.setCheckedState(this.$chk, true);\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.setCheckedState(this.$chk, false);\r\n    },\r\n\r\n    isChecked: function () {\r\n      var checked = this.$chk.prop('checked');\r\n      return checked;\r\n    },\r\n\r\n    enable: function () {\r\n      this.setDisabledState(this.$chk, false);\r\n    },\r\n\r\n    disable: function () {\r\n      this.setDisabledState(this.$chk, true);\r\n    },\r\n\r\n    destroy: function () {\r\n      this.$label.remove();\r\n      return this.$label[0].outerHTML;\r\n    }\r\n  });\r\n\r\n\r\n  Checkbox.prototype.getValue = Checkbox.prototype.isChecked;\r\n\r\n  plugins.register(Checkbox);\r\n\r\n  return toggles.Checkbox = Checkbox;\r\n});\r\n\ndefine('skylark-domx-toggles/Radio',[\r\n  \"skylark-langx/langx\",\r\n  \"skylark-domx/browser\",\r\n  \"skylark-domx/eventer\",\r\n  \"skylark-domx/noder\",\r\n  \"skylark-domx/geom\",\r\n  \"skylark-domx/query\",\r\n  \"skylark-domx-plugins\",  \r\n  \"./toggles\"\r\n],function(langx,browser,eventer,noder,geom,$,plugins,toggles){\r\n\r\n\r\n  var Radio = plugins.Plugin.inherit({\r\n    klassName: \"Radio\",\r\n\r\n    pluginName : \"domx.toggles.radio\",\r\n\r\n    options : {\r\n      ignoreVisibilityCheck: false\r\n    },\r\n\r\n    _construct : function(elm,options) {\r\n      this.overrided(elm,options);\r\n      if (elm.tagName.toLowerCase() !== 'label') {\r\n        throw new Error('Radio must be initialized on the `label` that wraps the `input` element. See https://github.com/ExactTarget/fuelux/blob/master/reference/markup/radio.html for example of proper markup. Call `.radio()` on the `<label>` not the `<input>`');\r\n      }\r\n\r\n      // cache elements\r\n      this.$label = this.$();\r\n      this.$radio = this.$label.find('input[type=\"radio\"]');\r\n      this.groupName = this.$radio.attr('name'); // don't cache group itself since items can be added programmatically\r\n\r\n      if (!this.options.ignoreVisibilityCheck && this.$radio.css('visibility').match(/hidden|collapse/)) {\r\n        throw new Error('For accessibility reasons, in order for tab and space to function on radio, `visibility` must not be set to `hidden` or `collapse`. See https://github.com/ExactTarget/fuelux/pull/1996 for more details.');\r\n      }\r\n\r\n      // determine if a toggle container is specified\r\n      var containerSelector = this.$radio.attr('data-toggle');\r\n      this.$toggleContainer = $(containerSelector);\r\n\r\n      // handle internal events\r\n      this.$radio.on('change', langx.proxy(this.itemchecked, this));\r\n\r\n      // set default state\r\n      this.setInitialState();\r\n    },\r\n\r\n    setInitialState: function () {\r\n      var $radio = this.$radio;\r\n\r\n      // get current state of input\r\n      var checked = $radio.prop('checked');\r\n      var disabled = $radio.prop('disabled');\r\n\r\n      // sync label class with input state\r\n      this.setCheckedState($radio, checked);\r\n      this.setDisabledState($radio, disabled);\r\n    },\r\n\r\n    resetGroup: function () {\r\n      var $radios = $('input[name=\"' + this.groupName + '\"]');\r\n      $radios.each(function resetRadio (index, item) {\r\n        var $radio = $(item);\r\n        var $lbl = $radio.parent();\r\n        var containerSelector = $radio.attr('data-toggle');\r\n        var $containerToggle = $(containerSelector);\r\n\r\n\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n      });\r\n    },\r\n\r\n    setCheckedState: function (element, checked) {\r\n      var $radio = element;\r\n      var $lbl = $radio.parent();\r\n      var containerSelector = $radio.attr('data-toggle');\r\n      var $containerToggle = $(containerSelector);\r\n\r\n      if (checked) {\r\n        // reset all items in group\r\n        this.resetGroup();\r\n\r\n        $radio.prop('checked', true);\r\n        $lbl.addClass('checked');\r\n        $containerToggle.removeClass('hide hidden');\r\n        $lbl.trigger('checked.fu.radio');\r\n      } else {\r\n        $radio.prop('checked', false);\r\n        $lbl.removeClass('checked');\r\n        $containerToggle.addClass('hidden');\r\n        $lbl.trigger('unchecked.fu.radio');\r\n      }\r\n\r\n      $lbl.trigger('changed.fu.radio', checked);\r\n    },\r\n\r\n    setDisabledState: function (element, disabled) {\r\n      var $radio = $(element);\r\n      var $lbl = this.$label;\r\n\r\n      if (disabled) {\r\n        $radio.prop('disabled', true);\r\n        $lbl.addClass('disabled');\r\n        $lbl.trigger('disabled.fu.radio');\r\n      } else {\r\n        $radio.prop('disabled', false);\r\n        $lbl.removeClass('disabled');\r\n        $lbl.trigger('enabled.fu.radio');\r\n      }\r\n\r\n      return $radio;\r\n    },\r\n\r\n    itemchecked: function (evt) {\r\n      var $radio = $(evt.target);\r\n      this.setCheckedState($radio, true);\r\n    },\r\n\r\n    check: function () {\r\n      this.setCheckedState(this.$radio, true);\r\n    },\r\n\r\n    uncheck: function () {\r\n      this.setCheckedState(this.$radio, false);\r\n    },\r\n\r\n    isChecked: function () {\r\n      var checked = this.$radio.prop('checked');\r\n      return checked;\r\n    },\r\n\r\n    enable: function () {\r\n      this.setDisabledState(this.$radio, false);\r\n    },\r\n\r\n    disable: function () {\r\n      this.setDisabledState(this.$radio, true);\r\n    },\r\n\r\n    destroy: function () {\r\n      this.$label.remove();\r\n      return this.$label[0].outerHTML;\r\n    }\r\n\r\n  });\r\n\r\n\r\n  Radio.prototype.getValue = Radio.prototype.isChecked;\r\n\r\n  plugins.register(Radio);\r\n\r\n  return toggles.Radio = Radio;\r\n});\r\n\ndefine('skylark-domx-toggles/Tab',[\n  \"skylark-langx/langx\",\n  \"skylark-domx-browser\",\n  \"skylark-domx-eventer\",\n  \"skylark-domx-noder\",\n  \"skylark-domx-geom\",\n  \"skylark-domx-query\",\n  \"skylark-domx-plugins\",\n  \"./toggles\"\n],function(langx,browser,eventer,noder,geom,$,plugins,toggles){\n\n  'use strict';\n\n  // TAB CLASS DEFINITION\n  // ====================\n\n\n  var Tab =  plugins.Plugin.inherit({\n    klassName: \"Tab\",\n\n    pluginName : \"domx.toggles.tab\",\n\n    _construct : function(element,options) {\n      // jscs:disable requireDollarBeforejQueryAssignment\n      this.element = $(element)\n      this.target = options && options.target;\n\n      // jscs:enable requireDollarBeforejQueryAssignment\n      this.element.on(\"click.bs.tab.data-api\",langx.proxy(function(e){\n        e.preventDefault()\n        this.show();\n      },this));    \n    },\n\n    show : function () {\n      var $this    = this.element\n      var $ul      = $this.closest('ul:not(.dropdown-menu)')\n      var selector = this.target || $this.data('target');\n\n      if (!selector) {\n        selector = $this.attr('href')\n        selector = selector && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n      }\n\n      if ($this.parent('li').hasClass('active')) return\n\n      var $previous = $ul.find('.active:last a')\n      var hideEvent = eventer.create('hide.bs.tab', {\n        relatedTarget: $this[0]\n      })\n      var showEvent = eventer.create('show.bs.tab', {\n        relatedTarget: $previous[0]\n      })\n\n      $previous.trigger(hideEvent)\n      $this.trigger(showEvent)\n\n      if (showEvent.isDefaultPrevented() || hideEvent.isDefaultPrevented()) return\n\n      var $target = $(selector)\n\n      this.activate($this.closest('li'), $ul)\n      this.activate($target, $target.parent(), function () {\n        $previous.trigger({\n          type: 'hidden.bs.tab',\n          relatedTarget: $this[0]\n        })\n        $this.trigger({\n          type: 'shown.bs.tab',\n          relatedTarget: $previous[0]\n        })\n      })\n    },\n\n    activate : function (element, container, callback) {\n      var $active    = container.find('> .active')\n      var transition = callback\n        && browser.support.transition\n        && ($active.length && $active.hasClass('fade') || !!container.find('> .fade').length)\n\n      function next() {\n        $active\n          .removeClass('active')\n          .find('> .dropdown-menu > .active')\n            .removeClass('active')\n          .end()\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', false)\n\n        element\n          .addClass('active')\n          .find('[data-toggle=\"tab\"]')\n            .attr('aria-expanded', true)\n\n        if (transition) {\n          element[0].offsetWidth // reflow for transition\n          element.addClass('in')\n        } else {\n          element.removeClass('fade')\n        }\n\n        if (element.parent('.dropdown-menu').length) {\n          element\n            .closest('li.dropdown')\n              .addClass('active')\n            .end()\n            .find('[data-toggle=\"tab\"]')\n              .attr('aria-expanded', true)\n        }\n\n        callback && callback()\n      }\n\n      $active.length && transition ?\n        $active\n          .one('transitionEnd', next)\n          .emulateTransitionEnd(Tab.TRANSITION_DURATION) :\n        next()\n\n      $active.removeClass('in')\n    }\n\n\n  });\n\n\n  Tab.TRANSITION_DURATION = 150\n\n\n  plugins.register(Tab);\n\n  return toggles.Tab = Tab;\n});\n\ndefine('skylark-domx-toggles/main',[\r\n\t\"./toggles\",\r\n\t\"./CheckBox\",\r\n\t\"./Radio\",\r\n\t\"./Tab\"\r\n],function(toggles){\r\n\treturn toggles;\r\n});\ndefine('skylark-domx-toggles', ['skylark-domx-toggles/main'], function (main) { return main; });\n\n"]}