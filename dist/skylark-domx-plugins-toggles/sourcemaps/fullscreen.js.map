{"version":3,"sources":["fullscreen.js"],"names":["define","langx","styler","noder","eventer","$","plugins","toggles","Fullscreen","Plugin","inherit","klassName","pluginName","options","classes","full","unfull","selectors","fullscreenButton","fullscreenIcons","_construct","elm","prototype","call","this","$el","target","$fullscreenButton","find","$fullscreenIcons","listenTo","toggleFullScreen","updateFullscreenButton","document","fullscreenElement","exitFullscreen","webkitFullscreenElement","webkitExitFullscreen","webkitRequestFullscreen","requestFullscreen","_fullscreenIcons","forEach","icon","classList","toggle","data","removeClass","addClass","register"],"mappings":";;;;;;;AAAAA,QACE,gBACA,sBACA,qBACA,uBACA,qBACA,4BACA,aACA,SAASC,EAAMC,EAAOC,EAAOC,EAAQC,EAAIC,EAAQC,GAEjD,aAEA,IAAIC,EAAaF,EAAQG,OAAOC,SAC9BC,UAAY,aAEZC,WAAa,0BAEbC,SACEC,SACEC,KAAO,OACPC,OAAS,UAEXC,WACEC,iBAAmB,qBACnBC,gBAAkB,2BAKtBC,WAAY,SAASC,EAAKR,GAExBP,EAAQG,OAAOa,UAAUF,WAAWG,KAAKC,KAAKH,EAAIR,GAElD,IAAIY,EAAMD,KAAKnB,IACXY,EAAYO,KAAKX,QAAQI,UACzBS,EAASF,KAAKE,OAASF,KAAKX,QAAQa,OAEpCT,EAAUC,iBACZM,KAAKG,kBAAoBF,EAAIG,KAAKX,EAAUC,kBAE5CM,KAAKG,kBAAoBF,EAG3BD,KAAKK,iBAAmBJ,EAAIG,KAAKX,EAAUE,iBAG3CK,KAAKM,SAASN,KAAKG,kBAAkB,QAAQH,KAAKO,kBAClDP,KAAKM,SAASzB,EAAEqB,GAAQ,0CAA0CF,KAAKQ,yBAQzED,iBAAmB,WACbE,SAASC,kBACXD,SAASE,iBACAF,SAASG,wBAElBH,SAASI,uBACAb,KAAKE,OAAOY,wBAErBd,KAAKE,OAAOY,0BAEZd,KAAKE,OAAOa,qBAMhBP,uBAAyB,WACvBR,KAAKgB,iBAAiBC,QAASC,GAASA,EAAKC,UAAUC,OAAO,WAE1DX,SAASC,mBACXV,KAAKG,kBAAkBkB,KAAK,QAAS,wBACrCrB,KAAKG,kBAAkBmB,YAAYtB,KAAKX,QAAQC,QAAQC,MAAMgC,SAASvB,KAAKX,QAAQC,QAAQE,UAE5FQ,KAAKG,kBAAkBkB,KAAK,QAAS,mBACrCrB,KAAKG,kBAAkBmB,YAAYtB,KAAKX,QAAQC,QAAQE,QAAQ+B,SAASvB,KAAKX,QAAQC,QAAQC,UAQpG,OAFAT,EAAQ0C,SAASxC,GAEVD,EAAQC,WAAaA","file":"../fullscreen.js","sourcesContent":["define([\r\n  \"skylark-langx\",\r\n  \"skylark-domx-styler\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./toggles\"\r\n],function(langx,styler,noder, eventer,$ , plugins,toggles) {\r\n\r\n  'use strict'\r\n\r\n  var Fullscreen = plugins.Plugin.inherit({\r\n    klassName : \"Fullscreen\",\r\n\r\n    pluginName : \"intg.custom_html5_video\",\r\n   \r\n    options : {\r\n      classes : {\r\n        full : \"full\",\r\n        unfull : \"unfull\"\r\n      },\r\n      selectors : {\r\n        fullscreenButton : '.fullscreen-button',\r\n        fullscreenIcons : '.fullscreen-button use'\r\n      }\r\n    },\r\n\r\n\r\n    _construct: function(elm, options) {\r\n      //this.options = options\r\n      plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n      let $el = this.$(),\r\n          selectors = this.options.selectors,\r\n          target = this.target = this.options.target;\r\n\r\n      if (selectors.fullscreenButton) {\r\n        this.$fullscreenButton = $el.find(selectors.fullscreenButton);\r\n      } else {\r\n        this.$fullscreenButton = $el;\r\n      }\r\n\r\n      this.$fullscreenIcons = $el.find(selectors.fullscreenIcons);\r\n\r\n      // Add eventlisteners here\r\n      this.listenTo(this.$fullscreenButton,'click',this.toggleFullScreen);\r\n      this.listenTo($(target),'fullscreenchange,webkitfullscreenchange',this.updateFullscreenButton);\r\n\r\n    },\r\n\r\n\r\n    // toggleFullScreen toggles the full screen state of the video\r\n    // If the browser is currently in fullscreen mode,\r\n    // then it should exit and vice versa.\r\n    toggleFullScreen : function () {\r\n      if (document.fullscreenElement) {\r\n        document.exitFullscreen();\r\n      } else if (document.webkitFullscreenElement) {\r\n        // Need this to support Safari\r\n        document.webkitExitFullscreen();\r\n      } else if (this.target.webkitRequestFullscreen) {\r\n        // Need this to support Safari\r\n        this.target.webkitRequestFullscreen();\r\n      } else {\r\n        this.target.requestFullscreen();\r\n      }\r\n    },\r\n\r\n    // updateFullscreenButton changes the icon of the full screen button\r\n    // and tooltip to reflect the current full screen state of the video\r\n    updateFullscreenButton : function () {\r\n      this._fullscreenIcons.forEach((icon) => icon.classList.toggle('hidden'));\r\n\r\n      if (document.fullscreenElement) {\r\n        this.$fullscreenButton.data('title', 'Exit full screen (f)');\r\n        this.$fullscreenButton.removeClass(this.options.classes.full).addClass(this.options.classes.unfull);\r\n      } else {\r\n        this.$fullscreenButton.data('title', 'Full screen (f)');\r\n        this.$fullscreenButton.removeClass(this.options.classes.unfull).addClass(this.options.classes.full);\r\n      }\r\n    }\r\n\r\n  });\r\n\r\n  plugins.register(Fullscreen);\r\n\r\n  return toggles.Fullscreen = Fullscreen;\r\n});\r\n\r\n"]}