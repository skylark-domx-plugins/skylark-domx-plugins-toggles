{"version":3,"sources":["pip.js"],"names":["define","langx","styler","noder","eventer","$","plugins","toggles","Pip","Plugin","inherit","klassName","pluginName","options","classes","mini","unmini","selectors","pipButton","_construct","elm","prototype","call","this","$el","target","elmx","$pipButton","find","listenTo","togglePip","document","hide","targetEl","pictureInPicture","disabled","error","console","register"],"mappings":";;;;;;;AAAAA,QACE,gBACA,sBACA,qBACA,uBACA,qBACA,4BACA,aACA,SAASC,EAAMC,EAAOC,EAAOC,EAAQC,EAAIC,EAAQC,GAEjD,aAEA,IAAIC,EAAMF,EAAQG,OAAOC,SACvBC,UAAY,MAEZC,WAAa,mBAEbC,SACEC,SACEC,KAAO,OACPC,OAAS,UAEXC,WACEC,UAAY,OAKhBC,WAAY,SAASC,EAAKP,GAExBP,EAAQG,OAAOY,UAAUF,WAAWG,KAAKC,KAAKH,EAAIP,GAElD,IAAIW,EAAMD,KAAKlB,IACXY,EAAYM,KAAKV,QAAQI,UAChBM,KAAKE,OAASF,KAAKG,KAAKH,KAAKV,QAAQY,QAE9CR,EAAUC,UACZK,KAAKI,WAAaH,EAAII,KAAKX,EAAUC,WAErCK,KAAKI,WAAaH,EAIpBD,KAAKM,SAASN,KAAKI,WAAW,QAAQJ,KAAKO,WAErC,4BAA6BC,UAC/BR,KAAKI,WAAWK,QAMtBF,UAAY,WACV,IACE,IAAIG,EAAWV,KAAKE,OAAOL,MACvBa,IAAa9B,EAAM+B,oBACrBX,KAAKI,WAAWQ,UAAS,GACzBhC,EAAM+B,iBAAiBD,IAEvB9B,EAAM+B,kBAAiB,GAEzB,MAAOE,GACPC,QAAQD,MAAMA,GACd,QACAb,KAAKI,WAAWQ,UAAS,OAQ/B,OAFA7B,EAAQgC,SAAS9B,GAEVD,EAAQC,IAAMA","file":"../pip.js","sourcesContent":["define([\r\n  \"skylark-langx\",\r\n  \"skylark-domx-styler\",\r\n  \"skylark-domx-noder\",\r\n  \"skylark-domx-eventer\",\r\n  \"skylark-domx-query\",\r\n  \"skylark-domx-plugins-base\",\r\n  \"./toggles\"\r\n],function(langx,styler,noder, eventer,$ , plugins,toggles) {\r\n\r\n  'use strict'\r\n\r\n  var Pip = plugins.Plugin.inherit({\r\n    klassName : \"Pip\",\r\n\r\n    pluginName : \"domx.toggles.pip\",\r\n   \r\n    options : {\r\n      classes : {\r\n        mini : \"mini\",\r\n        unmini : \"unmini\"\r\n      },\r\n      selectors : {\r\n        pipButton : null //'.pip-button'\r\n      }\r\n    },\r\n\r\n\r\n    _construct: function(elm, options) {\r\n      //this.options = options\r\n      plugins.Plugin.prototype._construct.call(this,elm,options);\r\n\r\n      let $el = this.$(),\r\n          selectors = this.options.selectors,\r\n          target = this.target = this.elmx(this.options.target);\r\n\r\n      if (selectors.pipButton) {\r\n        this.$pipButton = $el.find(selectors.pipButton);\r\n      } else {\r\n        this.$pipButton = $el;\r\n      }\r\n\r\n\r\n      this.listenTo(this.$pipButton,'click',this.togglePip);\r\n\r\n      if (!('pictureInPictureEnabled' in document)) {\r\n          this.$pipButton.hide();\r\n      }\r\n\r\n    },\r\n\r\n    // togglePip toggles Picture-in-Picture mode on the video\r\n    togglePip : function () {\r\n      try {\r\n        let targetEl = this.target.elm();\r\n        if (targetEl !== noder.pictureInPicture()) {\r\n          this.$pipButton.disabled(true);\r\n          noder.pictureInPicture(targetEl)\r\n        } else {\r\n          noder.pictureInPicture(false)\r\n        }\r\n      } catch (error) {\r\n        console.error(error);\r\n      } finally {\r\n        this.$pipButton.disabled(false);\r\n      }\r\n    },\r\n\r\n  });\r\n\r\n  plugins.register(Pip);\r\n\r\n  return toggles.Pip = Pip;\r\n});\r\n\r\n"]}